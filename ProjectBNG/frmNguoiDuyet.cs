using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using ProjectBNG.Models;
using ProjectBNG.Class;

namespace ProjectBNG
{
    public partial class frmNguoiDuyet : Form
    {
        public frmNguoiDuyet()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            ProjectBNG.Models.SMMgEntities dbContext = new ProjectBNG.Models.SMMgEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.NguoiDuyets.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    nguoiDuyetsBindingSource.DataSource = dbContext.NguoiDuyets.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void button4_Click(object sender, EventArgs e)
        {
            this.Close();
        }
        SMMgEntities db = new SMMgEntities();

        private bool CheckExistForm(string name)
        {
            bool check = false;
            foreach (Form frm in this.MdiChildren)
            {
                if (frm.Name == name)
                {
                    check = true;
                    break;
                }
            }
            return check;
        }

        private void ActiveChildForm(string name)
        {
            foreach (Form frm in this.MdiChildren)
            {
                if (frm.Name == name)
                {
                    frm.Activate();
                    break;
                }
            }
        }
        private void btnThem_Click(object sender, EventArgs e)
        {
            if (!CheckExistForm("frmThemNguoiDuyet"))
            {
                frmThemNguoiDuyet fThemNguoiDuyet = new frmThemNguoiDuyet(() => {
                    gridControlNguoiDuyet.DataSource = db.NguoiDuyets.ToList();
                    gridControlNguoiDuyet.RefreshDataSource();
                    return false;
                });
                //fthemsuangky.MdiParent = this.MdiParent;
                fThemNguoiDuyet.ShowDialog(this);
            }
            else
            {
                ActiveChildForm("frmThemNguoiDuyet");
            }
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            NguoiDuyet delNguoiDuyet = new NguoiDuyet();
            try
            {
                delNguoiDuyet.id = int.Parse(gridViewNguoiDuyet.GetRowCellValue(gridViewNguoiDuyet.FocusedRowHandle, "id").ToString());
            }
            catch { }
            NguoiDuyet d = db.NguoiDuyets.Find(delNguoiDuyet.id);
            db.NguoiDuyets.Remove(d);
            db.SaveChanges();
            //deleteNguoiKy(delNguoiKy); 
            frmNguoiDuyet_Load(sender, e);
            MessageBox.Show("Đã xóa thành công ", "Thông báo");
        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            if (!CheckExistForm("frmSuaNguoiDuyet"))
            {
                NguoiDuyet selectNguoiDuyet = new NguoiDuyet();
                try
                {
                    selectNguoiDuyet = (NguoiDuyet)gridViewNguoiDuyet.GetRow(gridViewNguoiDuyet.FocusedRowHandle);

                }
                catch { }
                frmSuaNguoiDuyet frmSuaNguoiDuyet = new frmSuaNguoiDuyet(() =>
                {
                    ProjectBNG.Models.SMMgEntities dbContext = new ProjectBNG.Models.SMMgEntities();
                    // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
                    dbContext.NguoiDuyets.LoadAsync().ContinueWith(loadTask =>
                    {
                        // Bind data to control when loading complete
                        nguoiDuyetsBindingSource.DataSource = dbContext.NguoiDuyets.Local.ToBindingList();
                    }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
                    return false;
                }, selectNguoiDuyet);
                frmSuaNguoiDuyet.ShowDialog(this);
                 
            frmNguoiDuyet_Load(sender, e);
            }
            else
            {
                ActiveChildForm("frmSuaNguoiDuyet");
            }
           // form kia dau nhi 
        }

        private void frmNguoiDuyet_Load(object sender, EventArgs e)
        {
            SMMgEntities db = new SMMgEntities();
            gridControlNguoiDuyet.DataSource = db.NguoiDuyets.ToList();
            gridControlNguoiDuyet.RefreshDataSource();
        }

        private void gridViewNguoiDuyet_CustomDrawRowIndicator(object sender, DevExpress.XtraGrid.Views.Grid.RowIndicatorCustomDrawEventArgs e)
        {
            CommonFunction.gridView_CustomDrawRowIndicator(sender, e, gridViewNguoiDuyet);
        }
    }
}
